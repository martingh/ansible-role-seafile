---
- name:         provision sysconfig
  template:
    src:        init/seafile.sysconfig
    dest:       /etc/sysconfig/seafile
    owner:      root
    group:      root
    mode:       0644
  when:         ansible_os_family == "RedHat"
  notify:       restart_seafile

- name:         provision sysvinit script
  template:
    src:        'init/{{ item.name }}.initd.{{ ansible_os_family }}'
    dest:       '/etc/init.d/{{ item.name }}'
    owner:      root
    group:      root
    mode:       0750
  when:         ansible_os_family in item.os_family and ansible_service_mgr == "sysvinit"
  with_items:   '{{ SEAFILE_INIT_SCRIPTS }}'
  notify:       restart_seafile

- name:         provision systemd services
  template:
    src:        'systemd/{{ item.name }}.service'
    dest:       '/etc/systemd/system/'
  when:         ansible_service_mgr == "systemd"
  with_items:   '{{ SEAFILE_INIT_SCRIPTS }}'
  notify:
  - systemd_reload
  - restart_seafile

- name:         provision upstart script
  template:
    src:        init/seafile.conf
    dest:       /etc/init/seafile.conf
    owner:      root
    group:      root
    mode:       0644
  when:         ansible_service_mgr == "upstart"
  notify:       restart_seafile

# TODO does this work on older systemd containers, despite using a different systemd ansible module?
#- name:         enable seafile
#  service:
#    name:       'seafile'
#    enabled:    yes
#- name:         enable seahub
#  service:
#    name:       'seahub'
#    enabled:    yes

- name:         enable init services
  service:
    name:       '{{ item.name }}'
    enabled:    yes
  when:         ansible_os_family in item.os_family
  with_items:   '{{ SEAFILE_INIT_SCRIPTS }}'
  notify:       restart_seafile
